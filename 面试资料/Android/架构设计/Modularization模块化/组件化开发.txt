组件化开发
https://github.com/guiying712/AndroidModulePattern
http://blog.spinytech.com/2016/12/28/android_modularization/
https://github.com/qibin0506/Module2Module

携程移动端架构演进与优化之路
http://geek.csdn.net/news/detail/108167



组件化开发需要解决的一些问题？
1）组件与组件之间的调用，数据等交互
2）多个组件，在使用application的时候怎办
3）多个组件资源命名重复
需要遵守命名规范，比如以 "组件名_" 开头

4）多个组件引用不同版本的相同的库


-------------------------路由机制
利用路由机制来实现组件化解耦。
Module之间的相互调用就都消失了，耦合性降低，所有的通信统一都交给Router来处理分发

可测试性强
每个Module并不依赖其他的Module，所以在开发过程中，我们只针对自己的模块进行开发

复用性增强
独立APP开发，

支持并行开发
整套架构很类似Git的Branch思想，基于主线，分支单独开发，最后再回归主线这种思路
实际的开发过程中，我们每个module可以是一个branch，也可以是一个仓库。每个模块都需要自己有单独的版本控制，便于问题管理及溯源。
主项目对各个模块的引用可以是直接引用，也可以是导出aar引用，或者是上传JCenter Maven等等方式。不过思路是统一的：继承公共->独立开发->主线合并。


基础库
在Router和Module之间再加一层，加一层CommonBaseLibrary，里面放一些所有项目都会用到的资源文件，Model类，工具类等等，然后CommonBaseLibrary再引入Router即可。
















